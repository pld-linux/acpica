From 5fd729c8f6c4ce295edd142fc41e03e831ba4afb Mon Sep 17 00:00:00 2001
From: Al Stone <ahs3@redhat.com>
Date: Mon, 12 Jul 2021 09:39:38 -0600
Subject: [PATCH] Support PHAT in a big-endian world

Signed-off-by: Al Stone <ahs3@redhat.com>
---
 source/common/dmtbdump2.c  | 36 ++++++++++++++++++++----------------
 source/compiler/dttable2.c | 12 +++++++++---
 2 files changed, 29 insertions(+), 19 deletions(-)

--- acpica-unix2-20221020/source/common/dmtbdump2.c.orig	2023-07-01 21:55:10.515514255 +0200
+++ acpica-unix2-20221020/source/common/dmtbdump2.c	2023-07-02 08:00:29.075426396 +0200
@@ -2029,25 +2029,30 @@ AcpiDmDumpPhat (
     ACPI_DMTABLE_INFO       *InfoTable;
     ACPI_PHAT_HEADER        *Subtable;
     ACPI_PHAT_VERSION_DATA  *VersionData;
+    UINT32                  VersionDataHeaderLength;
     UINT32                  RecordCount;
-    UINT32                  Length = Table->Length;
+    UINT32                  TableLength = AcpiUtReadUint32 (&Table->Length);
     UINT32                  Offset = sizeof (ACPI_TABLE_PHAT);
     UINT32                  OriginalOffset;
-    UINT32                  SubtableLength;
+    UINT16                  SubtableLength;
     UINT32                  PathLength;
     UINT32                  VendorLength;
     UINT16                  RecordType;
+    UINT16                  SubtableType;
     const wchar_t           *WideString;
 
 
     Subtable = ACPI_ADD_PTR (ACPI_PHAT_HEADER, Table, sizeof (ACPI_TABLE_PHAT));
 
-    while (Offset < Table->Length)
+    while (Offset < TableLength)
     {
         /* Common subtable header */
 
+        SubtableType = AcpiUtReadUint16 (&Subtable->Type);
+        SubtableLength = AcpiUtReadUint16 (&Subtable->Length);
+
         AcpiOsPrintf ("\n");
-        Status = AcpiDmDumpTable (Length, Offset, Subtable,
+        Status = AcpiDmDumpTable (TableLength, Offset, Subtable,
             sizeof (ACPI_PHAT_HEADER), AcpiDmTableInfoPhatHdr);
         if (ACPI_FAILURE (Status))
         {
@@ -2057,29 +2062,29 @@ AcpiDmDumpPhat (
         DbgPrint (ASL_DEBUG_OUTPUT, "\n/* %u, Subtable->Type %X */\n",
             __LINE__, Subtable->Type);
 
-        switch (Subtable->Type)
+        switch (SubtableType)
         {
         case ACPI_PHAT_TYPE_FW_VERSION_DATA:
 
             InfoTable = AcpiDmTableInfoPhat0;
-            SubtableLength = Offset += sizeof (ACPI_PHAT_VERSION_DATA);
+            Offset += sizeof (ACPI_PHAT_VERSION_DATA);
             break;
 
         case ACPI_PHAT_TYPE_FW_HEALTH_DATA:
 
             InfoTable = AcpiDmTableInfoPhat1;
-            SubtableLength = Offset += sizeof (ACPI_PHAT_TYPE_FW_HEALTH_DATA);
+            Offset += sizeof (ACPI_PHAT_TYPE_FW_HEALTH_DATA);
             break;
 
         default:
 
             DbgPrint (ASL_DEBUG_OUTPUT, "\n**** Unknown PHAT subtable type 0x%X\n\n",
-                Subtable->Type);
+                SubtableType);
 
             return;
         }
 
-        Status = AcpiDmDumpTable (Length, SubtableLength, Subtable,
+        Status = AcpiDmDumpTable (TableLength, SubtableLength, Subtable,
             SubtableLength, InfoTable);
         if (ACPI_FAILURE (Status))
         {
@@ -2087,25 +2092,26 @@ AcpiDmDumpPhat (
         }
 
         OriginalOffset = Offset;
-        switch (Subtable->Type)
+        switch (SubtableType)
         {
         case ACPI_PHAT_TYPE_FW_VERSION_DATA:
 
             VersionData = ACPI_CAST_PTR (ACPI_PHAT_VERSION_DATA, Subtable);
-            RecordCount = VersionData->ElementCount;
+            RecordCount = AcpiUtReadUint32 (&VersionData->ElementCount);
             RecordType = *ACPI_CAST_PTR (UINT8, Subtable);
+            VersionDataHeaderLength = AcpiUtReadUint32 (&(VersionData->Header.Length));
 
             /*
              * Skip past a zero-valued block (not part of the ACPI PHAT specification).
              * First, check for a zero length record and a zero element count
              */
-            if (!VersionData->Header.Length && !VersionData->ElementCount)
+            if (!VersionDataHeaderLength && !RecordCount)
             {
                 while (RecordType == 0)
                 {
                     Subtable = ACPI_ADD_PTR (ACPI_PHAT_HEADER, Table, Offset);
                     RecordType = *ACPI_CAST_PTR (UINT8, Subtable);
-                    RecordCount = VersionData->ElementCount;
+                    RecordCount = AcpiUtReadUint32 (&VersionData->ElementCount);
                     Offset += 1;
                 }
 
@@ -2120,13 +2126,13 @@ AcpiDmDumpPhat (
 
             /* Emit each of the version elements */
 
-            while (RecordCount && VersionData->Header.Length)
+            while (RecordCount && VersionDataHeaderLength)
             {
                 AcpiOsPrintf ("\n/* Version Element #%Xh Offset %Xh */\n\n",
                     VersionData->ElementCount - RecordCount + 1, Offset);
 
                 Subtable = ACPI_ADD_PTR (ACPI_PHAT_HEADER, Table, Offset);
-                Status = AcpiDmDumpTable (Length, Offset, Subtable,
+                Status = AcpiDmDumpTable (TableLength, Offset, Subtable,
                     sizeof (ACPI_PHAT_VERSION_ELEMENT), AcpiDmTableInfoPhat0a);
                 if (ACPI_FAILURE (Status))
                 {
@@ -2150,9 +2156,9 @@ AcpiDmDumpPhat (
 
             PathLength = (wcslen (WideString) * 2) + 2;
             DbgPrint (ASL_DEBUG_OUTPUT, "/* %u, PathLength %X, Offset %X, Table->Length %X */\n",
-                __LINE__, PathLength, Offset, Length);
+                __LINE__, PathLength, Offset, TableLength);
 
-            Status = AcpiDmDumpTable (Length, Offset,
+            Status = AcpiDmDumpTable (TableLength, Offset,
                 ACPI_ADD_PTR (ACPI_PHAT_HEADER, Subtable, sizeof (ACPI_PHAT_HEALTH_DATA)),
                 PathLength, AcpiDmTableInfoPhat1a);
             Offset += PathLength;
@@ -2164,15 +2170,15 @@ AcpiDmDumpPhat (
             /* Get Device-Specific Data - length of which is the remaining subtable length. */
 
             VendorLength =
-                Subtable->Length - sizeof (ACPI_PHAT_HEALTH_DATA) - PathLength;
+                SubtableLength - sizeof (ACPI_PHAT_HEALTH_DATA) - PathLength;
             DbgPrint (ASL_DEBUG_OUTPUT, "%u, Subtable->Length %X, VendorLength %X, Offset %X PathLength: %X\n",
-                __LINE__, Subtable->Length, VendorLength, Offset, PathLength);
+                __LINE__, SubtableLength, VendorLength, Offset, PathLength);
 
             if (VendorLength)
             {
                 /* Point past the Device Path, Compile the Device-Specific Data */
 
-                Status = AcpiDmDumpTable (Length, Offset,
+                Status = AcpiDmDumpTable (TableLength, Offset,
                     ACPI_ADD_PTR (ACPI_PHAT_HEADER, Subtable, sizeof (ACPI_PHAT_HEALTH_DATA) + PathLength),
                     VendorLength, AcpiDmTableInfoPhat1b);
                 if (ACPI_FAILURE (Status))
@@ -2192,7 +2198,7 @@ AcpiDmDumpPhat (
         default:
 
             AcpiOsPrintf ("\n**** Unknown PHAT subtable type 0x%X\n\n",
-                Subtable->Type);
+                SubtableType);
             return;
         }
 
@@ -2200,7 +2206,7 @@ AcpiDmDumpPhat (
 
         DbgPrint (ASL_DEBUG_OUTPUT, "/* %u, Bottom of main loop: Offset %X, "
             "Subtable->Length %X, Table->Length %X */\n",
-            __LINE__, Offset, Subtable->Length, Table->Length);
+            __LINE__, Offset, SubtableLength, TableLength);
 
         Subtable = ACPI_ADD_PTR (ACPI_PHAT_HEADER, Table,
             Offset);
--- acpica-unix2-20221020/source/compiler/dttable2.c.orig	2023-07-02 08:01:19.868484559 +0200
+++ acpica-unix2-20221020/source/compiler/dttable2.c	2023-07-02 08:06:56.953325081 +0200
@@ -1278,6 +1278,8 @@ DtCompilePhat (
     UINT32                  TableOffset = 0;
     UINT32                  DataOffsetValue;
     UINT32                  i;
+    UINT16                  SubtableType;
+    UINT16                  Tmp16;
 
 
     /* The table consists of subtables */
@@ -1300,8 +1302,9 @@ DtCompilePhat (
         DtPushSubtable (Subtable);
 
         PhatHeader = ACPI_CAST_PTR (ACPI_PHAT_HEADER, Subtable->Buffer);
+	SubtableType = AcpiUtReadUint16 (&PhatHeader->Type);
 
-        switch (PhatHeader->Type)
+        switch (SubtableType)
         {
         case ACPI_PHAT_TYPE_FW_VERSION_DATA:
 
@@ -1389,13 +1392,13 @@ DtCompilePhat (
         ParentTable = DtPeekSubtable ();
         DtInsertSubtable (ParentTable, Subtable);
 
-        switch (PhatHeader->Type)
+        switch (SubtableType)
         {
         case ACPI_PHAT_TYPE_FW_VERSION_DATA:
 
             VersionData = ACPI_CAST_PTR (ACPI_PHAT_VERSION_DATA,
                 (Subtable->Buffer - sizeof (ACPI_PHAT_HEADER)));
-            RecordCount = VersionData->ElementCount;
+            RecordCount = AcpiUtReadUint32 (&VersionData->ElementCount);
 
             /* Compile all of the Version Elements */
 
@@ -1498,6 +1501,9 @@ DtCompilePhat (
             DtFatal (ASL_MSG_UNKNOWN_SUBTABLE, *PFieldList, "PHAT");
             return (AE_ERROR);
         }
+
+	Tmp16 = AcpiUtReadUint16 (&PhatHeader->Length);
+	PhatHeader->Length = Tmp16;
     }
 
     return (Status);
